#
# ChangeUserManagerAttr
#
[cmdletbinding(SupportsShouldProcess=$True)]

param (
	[ValidateScript({Test-Path $_ -PathType Leaf})]
	[string] $HRWorksCSV = 'C:\temp\Copy of 2018-03-23 Mitarbeiterliste an Service für Einspielung und Prüfung Organ.._ (002).csv'
)
function Write-ErrorEventLog ([string] $msg) {
	$WhatIfPreferenceVariable = $WhatIfPreference
	$WhatIfPreference = $false
	$t = $host.ui.RawUI.ForegroundColor
	$host.ui.RawUI.ForegroundColor = "Red"
	Write-Output $msg
	$host.ui.RawUI.ForegroundColor = $t
	$WhatIfPreference = $WhatIfPreferenceVariable
} #function write error 

function Write-InformationEventLog ([string] $msg) {
	$WhatIfPreferenceVariable = $WhatIfPreference
	$WhatIfPreference = $false
	$t = $host.ui.RawUI.ForegroundColor
	$host.ui.RawUI.ForegroundColor = "Yellow"
	Write-Output $msg
	$host.ui.RawUI.ForegroundColor = $t
	$WhatIfPreference = $WhatIfPreferenceVariable
} #function write information


$users = Import-Csv -Path $HRWorksCSV
if ($WhatIfPreference) {Write-InformationEventLog "Following users will be changed:"}
foreach ($user in $users) {
	if ($user.upn) {
		$filter = "userprincipalname -eq `"$($user.upn)`""
	} else {
		$filter = "displayname -like `"$($user.Name)*$($user.Vorname)*`""
	}
	try {
		if ($WhatIfPreference) {
			get-aduser -Filter $filter -Properties displayname | select displayname,userprincipalname, @{label='manager';expression={(get-aduser -Properties displayname -Filter "displayname -eq `"$($user.manager)`"").userprincipalname}}
		} else {
			get-aduser -Filter $filter -Properties displayname  | Set-ADUser -Manager (get-aduser -Properties displayname -Filter "displayname -eq `"$($user.manager)`"").DistinguishedName
		} 
	} catch {
		Write-ErrorEventLog "User with UserPrincipalName $($user.upn) has not been found."
	}
}