# ITVT internal project             #
#                                   #
# Preparation steps for Office365   #
# Export AD users properties        #
#                                   #
# Author: Yaroslav Yakushev         #
#                                   #
#####################################

#get list of all users
$users = get-aduser -filter 'name -like "*"'  -Properties DisplayName, emailaddress, userprincipalname, CanonicalName,city,CN,country, Company, Department, Description, DistinguishedName, enabled, GivenName,HomeDirectory, HomedirRequired, HomeDrive, HomeMDB, HomeMTA, HomePage, HomePhone, l, mail, mailnickname, Manager, MemberOf, msRTCSIP*, msRTCSIP*, Office, PostalCode, PrimaryGroup, proxyAddresses, SamAccountName, state, surname, title, wwwhomepage

#export to file
$users | Export-Clixml "$((get-location).path)\ADUsersProperties.xml"
$users | Export-Csv -Delimiter "$([char] 9)" -Path "$((get-location).path)\ADUsersProperties.csv" -Force -Encoding Unicode
$users | select AccountExpirationDate,accountExpires,AccountLockoutTime,AccountNotDelegated,adminCount,AllowReversiblePasswordEncryption,@{name="altRecipientBL";expression={$_.altRecipientBL -join "`n"}},@{name="AuthenticationPolicy";expression={$_.AuthenticationPolicy -join "`n"}},@{name="AuthenticationPolicySilo";expression={$_.AuthenticationPolicySilo -join "`n"}},BadLogonCount,badPasswordTime,badPwdCount,c,CannotChangePassword,CanonicalName,@{name="Certificates";expression={$_.Certificates -join "`n"}},City,CN,co,codePage,Company,@{name="CompoundIdentitySupported";expression={$_.CompoundIdentitySupported -join "`n"}},Country,countryCode,Created,createTimeStamp,Deleted,Department,Description,@{name="directReports";expression={$_.directReports -join "`n"}},DisplayName,DistinguishedName,Division,DoesNotRequirePreAuth,@{name="dSCorePropagationData";expression={$_.dSCorePropagationData -join "`n"}},EmailAddress,EmployeeID,EmployeeNumber,Enabled,facsimileTelephoneNumber,Fax,GivenName,HomeDirectory,HomedirRequired,HomeDrive,homeMDB,homeMTA,HomePage,HomePhone,Initials,instanceType,isDeleted,@{name="KerberosEncryptionType";expression={$_.KerberosEncryptionType -join "`n"}},l,LastBadPasswordAttempt,LastKnownParent,lastLogoff,lastLogon,LastLogonDate,lastLogonTimestamp,legacyExchangeDN,LockedOut,lockoutTime,logonCount,LogonWorkstations,mail,mailNickname,@{name="managedObjects";expression={$_.managedObjects -join "`n"}},Manager,mDBUseDefaults,@{name="MemberOf";expression={$_.MemberOf -join "`n"}},MNSLogonAccount,mobile,MobilePhone,Modified,modifyTimeStamp,msDS-User-Account-Control-Computed,msExchALObjectVersion,@{name="msExchDelegateListBL";expression={$_.msExchDelegateListBL -join "`n"}},msExchHomeServerName,msExchMailboxGuid,msExchMailboxSecurityDescriptor,msExchMobileMailboxFlags,@{name="msExchPoliciesIncluded";expression={$_.msExchPoliciesIncluded -join "`n"}},msExchRBACPolicyLink,msExchRecipientDisplayType,msExchRecipientTypeDetails,msExchSafeRecipientsHash,msExchSafeSendersHash,@{name="msExchShadowProxyAddresses";expression={$_.msExchShadowProxyAddresses -join "`n"}},@{name="msExchTextMessagingState";expression={$_.msExchTextMessagingState -join "`n"}},@{name="msExchUMDtmfMap";expression={$_.msExchUMDtmfMap -join "`n"}},msExchUserAccountControl,msExchUserCulture,msExchVersion,msExchWhenMailboxCreated,@{name="mSMQDigests";expression={$_.mSMQDigests -join "`n"}},mSMQSignCertificates,msNPAllowDialin,msTSExpireDate,msTSLicenseVersion,msTSLicenseVersion2,msTSLicenseVersion3,msTSManagingLS,Name,nTSecurityDescriptor,ObjectCategory,ObjectClass,ObjectGUID,objectSid,Office,OfficePhone,Organization,OtherName,@{name="otherTelephone";expression={$_.otherTelephone -join "`n"}},PasswordExpired,PasswordLastSet,PasswordNeverExpires,PasswordNotRequired,physicalDeliveryOfficeName,POBox,PostalCode,PrimaryGroup,primaryGroupID,@{name="PrincipalsAllowedToDelegateToAccount";expression={$_.PrincipalsAllowedToDelegateToAccount -join "`n"}},ProfilePath,ProtectedFromAccidentalDeletion,@{name="protocolSettings";expression={$_.protocolSettings -join "`n"}},@{name="proxyAddresses";expression={$_.proxyAddresses -join "`n"}},@{name="PSShowComputerName";expression={$_.PSShowComputerName -join "`n"}},@{name="publicDelegates";expression={$_.publicDelegates -join "`n"}},@{name="publicDelegatesBL";expression={$_.publicDelegatesBL -join "`n"}},pwdLastSet,SamAccountName,sAMAccountType,ScriptPath,sDRightsEffective,@{name="ServicePrincipalNames";expression={$_.ServicePrincipalNames -join "`n"}},@{name="showInAddressBook";expression={$_.showInAddressBook -join "`n"}},SID,@{name="SIDHistory";expression={$_.SIDHistory -join "`n"}},SmartcardLogonRequired,sn,st,State,StreetAddress,Surname,telephoneNumber,terminalServer,textEncodedORAddress,thumbnailPhoto,Title,TrustedForDelegation,TrustedToAuthForDelegation,UseDESKeyOnly,userAccountControl,@{name="userCertificate";expression={$_.userCertificate -join "`n"}},userParameters,UserPrincipalName,uSNChanged,uSNCreated,whenChanged,whenCreated,@{name="WriteDebugStream";expression={$_.WriteDebugStream -join "`n"}},@{name="WriteErrorStream";expression={$_.WriteErrorStream -join "`n"}},@{name="WriteInformationStream";expression={$_.WriteInformationStream -join "`n"}},@{name="WriteVerboseStream";expression={$_.WriteVerboseStream -join "`n"}},@{name="WriteWarningStream";expression={$_.WriteWarningStream -join "`n"}},wWWHomePage | export-csv c:\temp\ad.csv  -Encoding UTF8